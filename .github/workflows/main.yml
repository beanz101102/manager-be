name: Deploy to VPS

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: staging
          fetch-depth: 0

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to VPS
        env:
          DEPLOY_PATH: "/root/projects/manager-be"
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
        run: |
          export SSHPASS=$VPS_PASSWORD
          SSH_OPTS="-o StrictHostKeyChecking=no -o ConnectTimeout=30"

          # Function to execute SSH commands with error handling
          ssh_exec() {
            if ! sshpass -e ssh $SSH_OPTS $VPS_USERNAME@$VPS_HOST "$1"; then
              echo "Error executing: $1"
              exit 1
            fi
          }

          # Deploy to VPS with detailed steps
          ssh_exec "cd $DEPLOY_PATH && \
            echo 'Stopping containers...' && \
            docker-compose down && \
            
            echo 'Cleaning workspace...' && \
            git clean -fd && \
            rm -rf dist/ && \
            rm -rf node_modules/ && \
            
            echo 'Updating source code...' && \
            git fetch origin staging && \
            git reset --hard origin/staging && \
            
            echo 'Removing old containers and images...' && \
            docker-compose rm -f && \
            docker rmi \$(docker images -q 'manager-be_app') || true && \
            
            echo 'Installing global dependencies...' && \
            npm install -g typescript rimraf npm-run-all && \
            
            echo 'Rebuilding application...' && \
            docker-compose build --no-cache app && \
            
            echo 'Starting services...' && \
            docker-compose up -d && \
            
            echo 'Waiting for app to start...' && \
            sleep 10 && \
            
            echo 'Verifying build output...' && \
            ls -la dist/ && \
            
            echo 'Checking container status...' && \
            docker-compose ps && \
            
            echo 'Checking app logs...' && \
            docker-compose logs --tail=50 app"
