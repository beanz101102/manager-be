name: Deploy to VPS

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: staging
          fetch-depth: 0

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to VPS
        env:
          DEPLOY_PATH: "/root/projects/manager-be"
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
        run: |
          export SSHPASS=$VPS_PASSWORD
          SSH_OPTS="-o StrictHostKeyChecking=no -o ConnectTimeout=30"

          # Function to execute SSH commands with error handling
          ssh_exec() {
            if ! sshpass -e ssh $SSH_OPTS $VPS_USERNAME@$VPS_HOST "$1"; then
              echo "Error executing: $1"
              exit 1
            fi
          }

          # Initialize or update repository
          ssh_exec "cd $DEPLOY_PATH && \
            (git fetch origin staging || git fetch --all) && \
            (git checkout staging || git checkout -b staging origin/staging)"

          # Backup certbot directory
          ssh_exec "cd $DEPLOY_PATH && \
            if [ -d certbot ]; then \
              cp -r certbot certbot_backup; \
            fi"

          # Continue with deployment
          ssh_exec "cd $DEPLOY_PATH && git pull origin staging"

          # Restore certbot directory
          ssh_exec "cd $DEPLOY_PATH && \
            if [ -d certbot_backup ]; then \
              rm -rf certbot && \
              mv certbot_backup certbot; \
            fi"

          # Restart containers
          ssh_exec "cd $DEPLOY_PATH && \
            docker-compose down && \
            docker-compose build --no-cache && \
            docker-compose up -d && \
            docker-compose ps"
